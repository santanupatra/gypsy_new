// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }
}

@import url('https://fonts.googleapis.com/css?family=Montserrat:100,200,300,400,500,600,700,800,900');

body,ion-app.md,h1,h2,h3,h4,h5,h6,p,label,input,.label,.select-text,a,li,.segment-button,.toolbar-title{
  font-family: 'Montserrat', sans-serif;
}


.left-menu{margin-bottom:0;position:relative; padding-right:60px; background: #fff;}
.left-menu .follow{right:0;position:absolute; top:8px; right:10px; font-size: 10px; height:2.5rem; padding: 0 0.8em; text-transform:uppercase}
.left-menu .item > ion-icon:first-child{min-width:40px;}
.left-menu .item img{max-width:52%;}
.left-menu .item .item-inner{margin-left:0px !important; background-image:none !important}
.left-menu .item .item-inner .label{font-size:1.4rem}
.left-menu.list-ios .item-block .item-inner, .left-menu.list-md .item-block .item-inner {border-bottom: none;}
.left-menu.list-ios > .item-block:first-child {border-top: 0;}
.btn-primary{
  background: #c0c0c0;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
}

.btn-dark{
  background: #888;
  color: #fff;
  font-weight: 600;
  text-transform: uppercase;
}

.pt-0{padding-top: 0 !important;}
.pr-0{ padding-right: 0 !important;}
.pb-0{ padding-bottom: 0 !important;}
.pl-0{padding-left: 0 !important;}

.mt-0{margin-top: 0 !important;}
.mr-0{margin-right: 0 !important;}
.mb-0{ margin-bottom: 0 !important;}
.ml-0{margin-left: 0 !important;}
//    header

.header {
  .bar-button{
    color: #fff;
  }
  .toolbar-background {
    background: #c0c0c0;
    border: none !important;
  }
  .bar-buttons{
    .bar-button{
      margin-left: 5px;
      font-size: 14px;
    }
  }
  .toolbar-title {
    font-size: 1.5rem;
    color: #fff;
  }
  .back-button-text{
    display: none;
  }
}

.follow{
  border-color: #555;
  color: #555;
}

// footer 

.custom-footer{
  a{
    color:#ccc;
    ion-icon{
      font-size: 24px;
    }
    &.activated{
      color: #4f4f4f;
    }
  }
  p{
    margin: 0;
    font-size: 12px;
    font-weight: 500;
  }
  .toolbar-background{
    background:#f1f1f1;
    border: none;
    box-shadow: 0 0 10px rgba(0,0,0,.5);
  }
}